openapi: 3.0.2
servers:
  - url: http://localhost:8080
    description: Local LINSTOR iSCSI server
info:
  description: |
    Linstor iSCSI REST API V1

    The v1 REST API should stay compatible and only additions are made to the API.
    If there are breaking changes or redesigned a new major REST API version will be issued.

    Server runs per default on port `8080`.

    To change the bind address or port you can use the following linstor client commands:
    ```
    linstor-iscsi server --addr=":8080"
    ```


    Changelog:

    * 1.0.0
      - Initial REST API v1
  version: 1.0.0
  title: Linstor iSCSI REST API
  contact:
    email: roland.kammerer@linbit.com
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.html
tags:
  - name: developers
    description: Operations available to regular developers
paths:
  /api/v1/iscsi:
    post:
      tags:
        - developers
      summary: add an iSCSI target with one or more LUNs
      operationId: iscsiPost
      description: |
        add an iSCSI target with one or more LUNs
      responses:
        '201':
          description: New iSCSI target created
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISCSI'
            example:
              target:
                  iqn: iqn.2019-08.com.linbit:resttest
                  service_ip: 10.0.0.2
                  username: username
                  password: password
                  portals: 10.0.0.2:3260
                  luns:
                    - id: 0
                      size_kib: 10240
              linstor:
                resource_group_name: mygroup
        description: iSCSI definition to add

  /api/v1/iscsi/{iqn}/{lunid}:
    parameters:
      - name: iqn
        in: path
        required: true
        schema:
          type: string
          description: IQN of the target to delete
      - name: lunid
        in: path
        required: true
        schema:
          type: integer
          format: int8
          description: LUN ID within the given target
    delete:
      tags:
        - developers
      summary: delete an iSCSI target with one or more LUNs
      operationId: iscsiDelete
      description: delete an iSCSI target with one or more LUNs
      responses:
        '200':
          description: iSCSI target deleted
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'

components:
  parameters:
    Resource:
      name: resource
      in: path
      required: true
      description: resource to use
      schema:
        type: string
  responses:
    InvalidInput:
      description: invalid input, or request failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErr'
    ObjectNotFound:
      description: object not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErr'
    OperationFailed:
      description: operation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErr'
  schemas:
    ApiErr:
      description: Common API error return
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: String representation of the http error code
        message:
          type: string
          example: Message containing human readable error message
    LUN:
      description: Representation of a LUN configuration
      type: object
      required:
        - id
        - size_kib
      properties:
        id:
          type: integer
          format: int8
        size_kib:
          type: integer
          format: int64
    Target:
      description: Representation of a iSCSI target configuration
      type: object
      required:
        - iqn
        - service_ip
        - username
        - password
        - portals
        - luns
      properties:
        iqn:
          type: string
        service_ip:
          type: string
        username:
          type: string
        password:
          type: string
        portals:
          type: string
        luns:
          type: array
          items:
            $ref: '#/components/schemas/LUN'
    Linstor:
      description: Representation of a LINSTOR configuration
      type: object
      required:
        - resource_group_name
      properties:
        controller_ip:
          type: string
          description: IP of the LINSTOR controller. If unset autodetected from Pacemaker.
        resource_group_name:
          type: string
          description: Name of the according LINSTOR resource group definition
    ISCSI:
      description: Representation of an iSCSI configuration
      type: object
      properties:
        target:
          $ref: '#/components/schemas/Target'
        linstor:
          $ref: '#/components/schemas/Linstor'
